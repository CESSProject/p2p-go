syntax = "proto3";

option go_package = "./;pb";

service Podr2Api {
  rpc request_gen_node_login_info(RequestNodeLogin)
      returns (ResponseNodeLogin) {}

  rpc request_gen_tag(RequestGenTag)
      returns (ResponseGenTag) {}

  rpc request_batch_verify(RequestBatchVerify) returns (ResponseBatchVerify) {}
}

message Tag {
  message T {
    string name = 1;
    string u = 2;
    repeated string phi = 3;
  }
  T t = 1;
  string phi_hash = 2;
  string attest = 3;
}

message RequestNodeLogin {}

message ResponseNodeLogin {
  bytes report = 1;
  bytes sig = 2;
  bytes cert = 3;
  bytes peer_id = 4;
  bytes podr2_pbk = 5;
}

message RequestGenTag {
  bytes file_data = 1;
  uint64 block_num = 2;
  string name = 3;
  string custom_data = 4;
}

message ResponseGenTag {
  Tag tag = 1;
}

message RequestBatchVerify {
  message Qslice {
    repeated uint32 random_index_list = 1;
    repeated bytes random_list = 2;
  }
  message BatchVerifyParam {
    repeated string names = 1;
    repeated string us = 2;
    repeated string mus = 3;
    string sigma = 4;
  }
  BatchVerifyParam agg_proof = 1;
  // 38 bytes raw multihash
  bytes peer_id = 2;
  // 32 bytes public key
  bytes miner_pbk = 3;
  // 64 bytes sign content
  bytes miner_peer_id_sign = 4;
  Qslice qslices = 5;
}

message ResponseBatchVerify {
  bool batch_verify_result = 1;
  bytes tee_peer_id = 2;
  repeated uint64 service_bloom_filter = 3;
  bytes signature = 4;
}

enum StatusCode {
  Success = 0;
  Processing = 1;
  InvalidParameters = 10001;
  InvalidPath = 10002;
  InternalError = 10003;
  OutOfMemory = 10004;
  AlgorithmError = 10005;
  UnknownError = 10006;
}

// push tag
message CustomTagGenResult {
  Tag tag = 1;
}

message IdleTagGenResult {
  Tag tag = 1;
  bytes sign = 2;
}

message GenErrorResult {
  uint32 code = 1;
  string msg = 2;
}

message TagPushRequest {
  oneof result {
      CustomTagGenResult ctgr = 1;
      IdleTagGenResult itgr = 2;
      GenErrorResult error = 3;
  }
}

message TagPushResponse {
  uint32 code = 1;
}