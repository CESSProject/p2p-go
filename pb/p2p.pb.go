// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: p2p.proto

package pb

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// designed to be shared between all app protocols
type MessageData struct {
	// shared between all requests
	ClientVersion        string   `protobuf:"bytes,1,opt,name=clientVersion,proto3" json:"clientVersion,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Id                   string   `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Gossip               bool     `protobuf:"varint,4,opt,name=gossip,proto3" json:"gossip,omitempty"`
	NodeId               string   `protobuf:"bytes,5,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	NodePubKey           []byte   `protobuf:"bytes,6,opt,name=nodePubKey,proto3" json:"nodePubKey,omitempty"`
	Sign                 []byte   `protobuf:"bytes,7,opt,name=sign,proto3" json:"sign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageData) Reset()         { *m = MessageData{} }
func (m *MessageData) String() string { return proto.CompactTextString(m) }
func (*MessageData) ProtoMessage()    {}
func (*MessageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{0}
}
func (m *MessageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageData.Unmarshal(m, b)
}
func (m *MessageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageData.Marshal(b, m, deterministic)
}
func (m *MessageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageData.Merge(m, src)
}
func (m *MessageData) XXX_Size() int {
	return xxx_messageInfo_MessageData.Size(m)
}
func (m *MessageData) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageData.DiscardUnknown(m)
}

var xxx_messageInfo_MessageData proto.InternalMessageInfo

func (m *MessageData) GetClientVersion() string {
	if m != nil {
		return m.ClientVersion
	}
	return ""
}

func (m *MessageData) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *MessageData) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *MessageData) GetGossip() bool {
	if m != nil {
		return m.Gossip
	}
	return false
}

func (m *MessageData) GetNodeId() string {
	if m != nil {
		return m.NodeId
	}
	return ""
}

func (m *MessageData) GetNodePubKey() []byte {
	if m != nil {
		return m.NodePubKey
	}
	return nil
}

func (m *MessageData) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

// a protocol define a set of reuqest and responses
type WritefileRequest struct {
	MessageData *MessageData `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	// Root hash
	Roothash string `protobuf:"bytes,2,opt,name=Roothash,json=roothash,proto3" json:"Roothash,omitempty"`
	// sha256 of the data
	Datahash string `protobuf:"bytes,3,opt,name=Datahash,json=datahash,proto3" json:"Datahash,omitempty"`
	// length of the data
	Length uint32 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	// data offset
	Offset uint32 `protobuf:"varint,5,opt,name=offset,proto3" json:"offset,omitempty"`
	// data
	Data                 []byte   `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WritefileRequest) Reset()         { *m = WritefileRequest{} }
func (m *WritefileRequest) String() string { return proto.CompactTextString(m) }
func (*WritefileRequest) ProtoMessage()    {}
func (*WritefileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{1}
}
func (m *WritefileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WritefileRequest.Unmarshal(m, b)
}
func (m *WritefileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WritefileRequest.Marshal(b, m, deterministic)
}
func (m *WritefileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WritefileRequest.Merge(m, src)
}
func (m *WritefileRequest) XXX_Size() int {
	return xxx_messageInfo_WritefileRequest.Size(m)
}
func (m *WritefileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WritefileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WritefileRequest proto.InternalMessageInfo

func (m *WritefileRequest) GetMessageData() *MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *WritefileRequest) GetRoothash() string {
	if m != nil {
		return m.Roothash
	}
	return ""
}

func (m *WritefileRequest) GetDatahash() string {
	if m != nil {
		return m.Datahash
	}
	return ""
}

func (m *WritefileRequest) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *WritefileRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WritefileRequest) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WritefileResponse struct {
	MessageData *MessageData `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	// return code
	Code uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// want offset
	Offset               uint32   `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WritefileResponse) Reset()         { *m = WritefileResponse{} }
func (m *WritefileResponse) String() string { return proto.CompactTextString(m) }
func (*WritefileResponse) ProtoMessage()    {}
func (*WritefileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{2}
}
func (m *WritefileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WritefileResponse.Unmarshal(m, b)
}
func (m *WritefileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WritefileResponse.Marshal(b, m, deterministic)
}
func (m *WritefileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WritefileResponse.Merge(m, src)
}
func (m *WritefileResponse) XXX_Size() int {
	return xxx_messageInfo_WritefileResponse.Size(m)
}
func (m *WritefileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WritefileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WritefileResponse proto.InternalMessageInfo

func (m *WritefileResponse) GetMessageData() *MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *WritefileResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WritefileResponse) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

// a protocol define a set of reuqest and responses
type ReadfileRequest struct {
	MessageData *MessageData `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	// Root hash
	Roothash string `protobuf:"bytes,2,opt,name=Roothash,json=roothash,proto3" json:"Roothash,omitempty"`
	// sha256 of the data
	Datahash string `protobuf:"bytes,3,opt,name=Datahash,json=datahash,proto3" json:"Datahash,omitempty"`
	// data offset
	Offset               uint32   `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadfileRequest) Reset()         { *m = ReadfileRequest{} }
func (m *ReadfileRequest) String() string { return proto.CompactTextString(m) }
func (*ReadfileRequest) ProtoMessage()    {}
func (*ReadfileRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{3}
}
func (m *ReadfileRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadfileRequest.Unmarshal(m, b)
}
func (m *ReadfileRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadfileRequest.Marshal(b, m, deterministic)
}
func (m *ReadfileRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadfileRequest.Merge(m, src)
}
func (m *ReadfileRequest) XXX_Size() int {
	return xxx_messageInfo_ReadfileRequest.Size(m)
}
func (m *ReadfileRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadfileRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadfileRequest proto.InternalMessageInfo

func (m *ReadfileRequest) GetMessageData() *MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *ReadfileRequest) GetRoothash() string {
	if m != nil {
		return m.Roothash
	}
	return ""
}

func (m *ReadfileRequest) GetDatahash() string {
	if m != nil {
		return m.Datahash
	}
	return ""
}

func (m *ReadfileRequest) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

type ReadfileResponse struct {
	MessageData *MessageData `protobuf:"bytes,1,opt,name=messageData,proto3" json:"messageData,omitempty"`
	// return code
	Code uint32 `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	// want offset
	Offset uint32 `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	// length of the data
	Length uint32 `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`
	// data
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadfileResponse) Reset()         { *m = ReadfileResponse{} }
func (m *ReadfileResponse) String() string { return proto.CompactTextString(m) }
func (*ReadfileResponse) ProtoMessage()    {}
func (*ReadfileResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_e7fdddb109e6467a, []int{4}
}
func (m *ReadfileResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadfileResponse.Unmarshal(m, b)
}
func (m *ReadfileResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadfileResponse.Marshal(b, m, deterministic)
}
func (m *ReadfileResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadfileResponse.Merge(m, src)
}
func (m *ReadfileResponse) XXX_Size() int {
	return xxx_messageInfo_ReadfileResponse.Size(m)
}
func (m *ReadfileResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadfileResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadfileResponse proto.InternalMessageInfo

func (m *ReadfileResponse) GetMessageData() *MessageData {
	if m != nil {
		return m.MessageData
	}
	return nil
}

func (m *ReadfileResponse) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ReadfileResponse) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadfileResponse) GetLength() uint32 {
	if m != nil {
		return m.Length
	}
	return 0
}

func (m *ReadfileResponse) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*MessageData)(nil), "MessageData")
	proto.RegisterType((*WritefileRequest)(nil), "WritefileRequest")
	proto.RegisterType((*WritefileResponse)(nil), "WritefileResponse")
	proto.RegisterType((*ReadfileRequest)(nil), "ReadfileRequest")
	proto.RegisterType((*ReadfileResponse)(nil), "ReadfileResponse")
}

func init() { proto.RegisterFile("p2p.proto", fileDescriptor_e7fdddb109e6467a) }

var fileDescriptor_e7fdddb109e6467a = []byte{
	// 352 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x93, 0x31, 0x4f, 0xeb, 0x30,
	0x10, 0xc7, 0xe5, 0x36, 0x6d, 0x93, 0x6b, 0xf3, 0x5e, 0x9f, 0x87, 0x27, 0xeb, 0xe9, 0x09, 0x45,
	0x11, 0x43, 0xa6, 0x20, 0x95, 0x91, 0x0d, 0xb1, 0x20, 0x84, 0x84, 0x3c, 0x80, 0xc4, 0x96, 0xd6,
	0xd7, 0xd4, 0x52, 0x1b, 0x9b, 0xd8, 0x1d, 0xf8, 0x18, 0xac, 0x7c, 0x18, 0x36, 0xbe, 0x17, 0xb2,
	0x31, 0x4a, 0x3a, 0x30, 0x30, 0x20, 0xb6, 0xfb, 0xff, 0xef, 0x2c, 0xfd, 0x7f, 0x77, 0x32, 0x24,
	0x7a, 0xa1, 0x4b, 0xdd, 0x2a, 0xab, 0xf2, 0x57, 0x02, 0xd3, 0x6b, 0x34, 0xa6, 0xaa, 0xf1, 0xa2,
	0xb2, 0x15, 0x3d, 0x86, 0x74, 0xb5, 0x95, 0xd8, 0xd8, 0x5b, 0x6c, 0x8d, 0x54, 0x0d, 0x23, 0x19,
	0x29, 0x12, 0x7e, 0x68, 0xd2, 0xff, 0x90, 0x58, 0xb9, 0x43, 0x63, 0xab, 0x9d, 0x66, 0x83, 0x8c,
	0x14, 0x43, 0xde, 0x19, 0xf4, 0x17, 0x0c, 0xa4, 0x60, 0x43, 0xff, 0x70, 0x20, 0x05, 0xfd, 0x0b,
	0xe3, 0x5a, 0x19, 0x23, 0x35, 0x8b, 0x32, 0x52, 0xc4, 0x3c, 0x28, 0xe7, 0x37, 0x4a, 0xe0, 0xa5,
	0x60, 0x23, 0x3f, 0x1b, 0x14, 0x3d, 0x02, 0x70, 0xd5, 0xcd, 0x7e, 0x79, 0x85, 0x8f, 0x6c, 0x9c,
	0x91, 0x62, 0xc6, 0x7b, 0x0e, 0xa5, 0x10, 0x19, 0x59, 0x37, 0x6c, 0xe2, 0x3b, 0xbe, 0xce, 0x5f,
	0x08, 0xcc, 0xef, 0x5a, 0x69, 0x71, 0x2d, 0xb7, 0xc8, 0xf1, 0x61, 0x8f, 0xc6, 0xd2, 0x12, 0xa6,
	0xbb, 0x8e, 0xcd, 0xa3, 0x4c, 0x17, 0xb3, 0xb2, 0xc7, 0xcb, 0xfb, 0x03, 0xf4, 0x1f, 0xc4, 0x5c,
	0x29, 0xbb, 0xa9, 0xcc, 0xc6, 0x53, 0x25, 0x3c, 0x6e, 0x83, 0x76, 0x3d, 0x37, 0xe3, 0x7b, 0xef,
	0x68, 0xb1, 0x08, 0xda, 0x81, 0x6c, 0xb1, 0xa9, 0xed, 0xc6, 0x03, 0xa6, 0x3c, 0x28, 0xe7, 0xab,
	0xf5, 0xda, 0xa0, 0xf5, 0x80, 0x29, 0x0f, 0xca, 0x01, 0xb8, 0xb7, 0x01, 0xcd, 0xd7, 0xb9, 0x82,
	0x3f, 0xbd, 0xfc, 0x46, 0xab, 0xc6, 0xe0, 0x97, 0x01, 0x28, 0x44, 0x2b, 0x25, 0xd0, 0x87, 0x4f,
	0xb9, 0xaf, 0x7b, 0x21, 0x86, 0xfd, 0x10, 0xf9, 0x13, 0x81, 0xdf, 0x1c, 0x2b, 0xf1, 0x43, 0x0b,
	0x0b, 0x99, 0xa2, 0x83, 0x4c, 0xcf, 0x04, 0xe6, 0x5d, 0xa6, 0xef, 0x5f, 0xc2, 0xa7, 0x97, 0xfb,
	0xb8, 0xd0, 0xa8, 0xbb, 0xd0, 0xf9, 0xe4, 0x7e, 0x54, 0x9e, 0x9c, 0xe9, 0xe5, 0x72, 0xec, 0xbf,
	0xce, 0xe9, 0x5b, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0x34, 0xdd, 0x75, 0x47, 0x03, 0x00, 0x00,
}
